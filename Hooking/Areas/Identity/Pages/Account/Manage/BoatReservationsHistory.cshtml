@page
@model Hooking.Areas.Identity.Pages.Account.Manage.BoatReservationsHistoryModel
@using Hooking.Models;

@{
    ViewData["Title"] = "Istorija rezervacija brodova";
    ViewData["ActivePage"] = ManageNavPages.BoatReservationHistory;
}

@{
    List<Boat> boats = (List<Boat>)ViewData["Boat"];
    int i = 0;
}
<table class="table">
    <thead>
        <tr>
            <th>
                Naziv broda
            </th>
            <th>
                <a asp-page="./BoatReservationsHistory" asp-route-sortOrder="@Model.StartDateSort">
                    Od
                </a>
            </th>
            <th>
                Do
            </th>
            <th>
                <a asp-page="./BoatReservationsHistory" asp-route-sortOrder="@Model.PriceSort">
                    Cena
                </a>
            </th>
            <th>
                Max broj osoba
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.myBoatReservations)
        {
            @if (DateTime.Compare(item.StartDate, DateTime.Now) < 0)
            {
                <tr>
                    <td>
                        @boats[i].Name
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PersonCount)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Prilozi zalbu</a>
                        <a href="@Url.Action("Details", "BoatReservations", new { Id = @item.Id })">Prikazi vise</a>

                    </td>


                </tr>
            }
            i++;
        }
    </tbody>
</table>